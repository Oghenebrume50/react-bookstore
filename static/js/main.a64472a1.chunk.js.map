{"version":3,"sources":["components/Book.js","utils/categories.js","components/CategoryFilter.js","containers/BooksList.js","actions/index.js","containers/BooksForm.js","components/App.js","reducers/books.js","reducers/filter.js","reducers/index.js","index.js"],"names":["Book","props","handleClick","bind","this","remove","book","id","title","category","className","onClick","React","Component","CategoryFilter","FilterCategories","categories","name","onChange","changeFilter","map","idx","key","value","BooksList","state","filter","handleFilterChange","e","target","setState","books","filterVal","Books","toLowerCase","removeBook","connect","dispatch","type","BooksForm","handleChange","handleSubmit","objName","preventDefault","createBook","shortid","generate","reset","onSubmit","placeholder","App","action","indexOf","slice","rootReducer","combineReducers","INITIAL_STATE","store","createStore","Wrapper","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a64472a1.chunk.js","sourcesContent":["import React from 'react';\n\nclass Book extends React.Component {\n  constructor(props){\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.remove(this.props.book)\n  }\n\n  render(){\n    const {id, title, category} = this.props.book;\n  return (\n    <div className='bookHolder'>\n      <div className='bookDetails'>\n        <div className='bookId'>{ id }</div>\n        <div>{ title }</div>\n        <div>{ category }</div>\n      </div>\n      <div>\n        <button onClick={this.handleClick} className='delButton'>delete</button>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default Book;","export default ['Action', 'Biography', 'History', 'Horror', 'Kids', 'Learning', 'Sci-Fi'];","import React from 'react';\nimport categories from '../utils/categories';\n\nconst CategoryFilter = (props) => {\n  const FilterCategories = ['All', ...categories];\n  return(\n    <div className='header'>\n      <div className='appTitle'>BookStore CMS</div>\n      <div className='filterDiv'>\n        <p className='hashText'>Categories</p>\n        <select\n        name='category'\n        onChange={props.changeFilter}\n        >\n          {FilterCategories.map((category, idx) => \n            <option key={idx} value={category}>{category}</option>\n          )}\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default CategoryFilter;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { removeBook, changeFilter } from '../actions/index';\nimport Book from '../components/Book';\nimport CategoryFilter from '../components/CategoryFilter';\n\nconst filteredBooks = (books, filterVal) => {\n  \n  return filterVal === 'All' ? books : \n    books.filter(book => book.category.toLowerCase() === filterVal.toLowerCase());\n}\n\nclass BooksList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filter: ''\n    };\n    this.handleFilterChange = this.handleFilterChange.bind(this);\n  }\n\n  handleFilterChange(e) {\n    this.props.changeFilter(e.target.value);\n    this.setState({\n      filter: e.target.value\n    });\n  }\n\n  render() {\n    const Books = filteredBooks(this.props.books, this.props.filter).map((book) => {\n      return <Book key={book.id} book={book} remove={this.props.removeBook} />;\n    });\n\n    return(\n      <div>\n        <CategoryFilter changeFilter={this.handleFilterChange} />\n        <div className='table'>\n          { Books }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    books: state.books,\n    filter: state.filter\n  }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeBook: (book) => dispatch(removeBook(book)),\n    changeFilter: (filter) => dispatch(changeFilter(filter))\n  }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BooksList);","const CREATE_BOOK = 'CREATE BOOK';\nconst REMOVE_BOOK = 'REMOVE BOOK';\nconst CHANGE_FILTER = 'CHANGE FILTER';\n\nconst createBook = (book) => {\n  return {\n    type: CREATE_BOOK,\n    book\n  }\n}\n\nconst removeBook = (book) => {\n  return {\n    type: REMOVE_BOOK,\n    book,\n  }\n}\n\nconst changeFilter = (filter) => {\n  return {\n    type: CHANGE_FILTER,\n    filter,\n  }\n}\n\nexport {createBook, removeBook, changeFilter};","import React from 'react';\nimport shortid from 'shortid';\n\nimport { connect } from 'react-redux';\n\nimport { createBook } from '../actions';\nimport categories from '../utils/categories';\n\nclass BooksForm extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      title: '',\n      category: ''\n    }\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e){\n    const objName = e.target.name;\n    this.setState({\n      [objName]: e.target.value,\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    const {title, category} = this.state;\n    this.props.createBook({\n      id: shortid.generate(),\n      title,\n      category\n    })\n\n    this.setState({\n      title: '',\n      category: 'Action'\n    });\n\n    e.target.reset();\n  }\n\n  render() {\n    return(\n      <div>\n        <div className='line'></div>\n        <p className='hashText'>ADD NEW BOOK</p>\n        <form onSubmit={this.handleSubmit} className='form'>\n          <input type='text' \n          placeholder='enter book title'\n          name='title'\n          className='bookTitleField'\n          onChange={this.handleChange}/>\n\n          <select \n          name='category'\n          value={this.state.category}\n          className='bookCategoryField'\n          onChange={this.handleChange}>\n            {categories.map((category, idx) => \n              <option key={idx}>{category}</option>\n            )}\n          </select>\n          <input type='submit' \n            value='Add book' \n            className='addBookBtn'/>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createBook: book => dispatch(createBook(book))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(BooksForm);\n","import React from 'react';\nimport BooksList from '../containers/BooksList';\nimport BooksForm from '../containers/BooksForm';\n\nconst App = () => {\n  return (\n    <div className='bookApp'>\n      <BooksList/>\n      <BooksForm />\n    </div>\n  )\n}\n\nexport default App;","const books = (state = [], action) => {\n  switch(action.type) {\n    case 'CREATE BOOK':\n      return [...state, action.book];\n    case 'REMOVE BOOK':\n      const idx = state.indexOf(action.book);\n      return [...state.slice(0,idx), ...state.slice(idx + 1)]\n    default:\n      return state;\n  }\n}\n\nexport default books;","const filter = (state = 'All', action) => {\n  switch (action.type){\n    case 'CHANGE FILTER':\n      return action.filter;\n    default:\n      return state;\n  }\n};\n\nexport default filter;\n  ","import { combineReducers } from 'redux';\nimport books from './books';\nimport filter from './filter';\n\nconst rootReducer = combineReducers ({\n  books,\n  filter\n});\n  \nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport shortid from 'shortid';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport rootReducer from './reducers/index';\nimport './index.css';\n\nconst INITIAL_STATE = {\n  books: [\n  {id: shortid.generate(), title: 'First book in series', category: 'sci-fi'},\n  {id: shortid.generate(), title: 'Second book in series', category: 'romance'},\n  {id: shortid.generate(), title: 'Third book in series', category: 'sci-fi'}\n  ]\n}\n\nconst store = createStore(rootReducer, INITIAL_STATE)\n\nconst Wrapper = (\n<Provider store={store}>\n  <App/>\n</Provider>\n);\n\nReactDOM.render(Wrapper, document.getElementById('root'));"],"sourceRoot":""}